import s from"node:path";import i from"express";import{findUp as p}from"find-up";import m from"get-port";import{listener as c}from"./.output/server/index.mjs";function V(e){const r=i();r.use(i.static(s.join(import.meta.dirname,".output","public"))),r.use(c);let t;return{async start(){const o=await u(e?.root);process.env.VITEVAL_ROOT_PATH=o,process.env.VITEVAL_DEBUG_MODE=e?.debug?"true":"false";const n=await m({port:e?.port??3e3});return new Promise(a=>{t=r.listen(n,()=>{a(n)})})},async restart(){return await this.shutdown(),await this.start()},async shutdown(){return new Promise(o=>{t.close(()=>{process.env.VITEVAL_ROOT_PATH=void 0,process.env.VITEVAL_DEBUG_MODE=void 0,o()})})}}}async function u(e=process.cwd()){const r=await p([...["ts","js","mts","mjs"].map(t=>`viteval.config.${t}`),".viteval"],{cwd:e});return r?s.dirname(r):e}export{V as createVitevalServer};
//# sourceMappingURL=server.mjs.map